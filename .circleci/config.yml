---
# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.2.4

commands:
  cached-checkout:
    description: "A checkout command using cache automatically"
    steps:
      - restore_cache:
          keys:
            - v1-source-{{ .Branch }}-{{ .Revision }}
            - v1-source-{{ .Branch }}-
            - v1-source-
      - checkout
      - save_cache:
          key: v1-source-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"

  browser-test-setup:
    description: "Sets up common dependencies for browser testing (python deps, manifest, packed web-ext)"
    parameters:
      browser:
        type: string
        default: firefox
    steps:
      - run:
          command: pip install -r requirements.txt
      # Work-around to define env variables from another, for the subsequent
      # steps.
      #  - Useful for firefox driver which relies on packaged extension
      - run:
          name: Define Packed Webext path
          command: |
            echo 'export WEBEXT_DIR="/tmp/ws/build-<< parameters.browser >>"' >> $BASH_ENV
      - run:
          name: Setup manifest
          command: python3 setup.py << parameters.browser >>

  firefox-setup:
    description: "Test setup for firefox testing"
    steps:
      - browser-tools/install-firefox
      - browser-tools/install-geckodriver
      - browser-test-setup:
          browser: firefox

  chrome-setup:
    description: "Test setup for chrome testing"
    steps:
      - browser-tools/install-chrome:
          chrome-version: 90.0.4430.212
      - browser-tools/install-chromedriver
      - browser-test-setup:
          browser: chrome

executors:
  python-node:
    docker:
      # Using the latest Node.js LTS image along with target python version
      - image: cimg/python:3.7-node
  browser-testing:
    docker:
      # Using python image with browsers testing baked in
      # (geckodriver & chrome are relevant for us)
      - image: cimg/python:3.7-browsers

jobs:
  basic-testing:
    executor: python-node
    working_directory: ~/repo
    steps:
      - cached-checkout

      # Download and cache node dependencies
      - restore_cache:
          keys:
            - v1-nodedeps-{{ .Branch }}-{{ checksum "package.json" }}
            - v1-nodedeps-{{ .Branch }}-
            - v1-nodedeps-
      - run:
          name: Check for outdated dependencies
          command: yarn install --frozen-lockfile
      - run: yarn install --pure-lockfile
      - save_cache:
          paths:
            - node_modules
          key: v1-nodedeps-{{ .Branch }}-{{ checksum "package.json" }}

      # Persist required files for building the webext pack
      # (web-ext tool from node_modules)
      - persist_to_workspace:
          root: .
          paths:
            - node_modules/

      # Execute actual steps: linting, and manifest setup
      - run:
          name: Lint Code
          command: yarn run lint
      - run:
          name: Lint Error and String codes
          command: python ./tools/logs_codes.py
      - run:
          name: Lint functions to replace
          command: python ./tools/functions_replacement.py
      - run:
          name: Setup manifest (FF)
          command: python3 setup.py firefox
      - run:
          name: Lint Extension
          command: ./node_modules/.bin/web-ext -s web-extension/ lint

  build-ext:
    parameters:
      browser:
        type: string
        default: firefox
    executor: python-node
    working_directory: ~/repo
    steps:
      - cached-checkout
      - attach_workspace:
          at: /tmp/ws

      - run:
          name: Setup manifest (<< parameters.browser >>)
          command: python3 setup.py << parameters.browser >>
      - run:
          name: Package Extension
          command: /tmp/ws/node_modules/.bin/web-ext -s web-extension/ -a ./build-<< parameters.browser >>/ build

      # Persist packed webext for functional testing
      - persist_to_workspace:
          root: .
          paths:
            - build-*

  test-common-basics:
    parameters:
      browser:
        type: string
    executor: browser-testing
    working_directory: ~/repo
    steps:
      - cached-checkout
      - attach_workspace:
          at: /tmp/ws

      - << parameters.browser >>-setup
      - run:
          command: pytest -v -s --browser << parameters.browser >> tests/func/test_load.py tests/func/test_sidebar_display.py

  test-common-advanced:
    parameters:
      browser:
        type: string
    executor: browser-testing
    working_directory: ~/repo
    steps:
      - cached-checkout
      - attach_workspace:
          at: /tmp/ws
      - << parameters.browser >>-setup
      - run:
          command: pytest -v -s --browser << parameters.browser >> tests/func/test_register.py

  test-reader:
    parameters:
      browser:
        type: string
      reader:
        type: string
    executor: browser-testing
    working_directory: ~/repo
    steps:
      - cached-checkout
      - attach_workspace:
          at: /tmp/ws
      - << parameters.browser >>-setup
      - run:
          command: pytest -v -s --browser << parameters.browser >> --reader << parameters.reader >> tests/func/test_reader.py

workflows:
  version: 2
  pre-merge:
    jobs:
      - basic-testing
      - build-ext: &build_ff
          name: build-firefox
          requires:
          - basic-testing
      - test-common-basics: &basics_ff
          name: test-firefox-basics
          browser: firefox
          requires:
          - build-firefox
          - basic-testing
      - test-reader:
          name: test-firefox-manganato
          browser: firefox
          reader: manganato
          requires: &ff_requirements
          - test-firefox-basics
      - test-common-advanced:
          name: test-firefox-advanced
          browser: firefox
          requires:
            - test-firefox-basics
            - test-firefox-manganato
      - test-common-basics: &basics_chrome
          name: test-chrome-basics
          browser: chrome
          requires:
          - basic-testing
      - test-reader:
          name: test-chrome-manganato
          browser: chrome
          reader: manganato
          requires: &chrome_requirements
          - test-chrome-basics
      - test-common-advanced:
          name: test-chrome-advanced
          browser: chrome
          requires:
            - test-chrome-basics
            - test-chrome-manganato
  weekly:
    triggers:
      - schedule:
          cron: "0 0 * * 0"
          filters:
            branches:
              only:
                - master
    jobs:
      - basic-testing
      # Firefox tests
      - build-ext: *build_ff
      - test-common-basics: *basics_ff
      - test-reader:
          name: test-firefox-fanfox
          browser: firefox
          reader: mangafox
          requires: *ff_requirements
      - test-reader:
          name: test-firefox-mangakakalot
          browser: firefox
          reader: mangakakalot
          requires: *ff_requirements
      - test-reader:
          name: test-firefox-manganato
          browser: firefox
          reader: manganato
          requires: *ff_requirements
      # - test-reader:
      #     name: test-firefox-isekaiscan
      #     browser: firefox
      #     reader: isekaiscan
      #     requires: *ff_requirements
      # Chrome tests
      - test-common-basics: *basics_chrome
      - test-reader:
          name: test-chrome-fanfox
          browser: chrome
          reader: mangafox
          requires: *chrome_requirements
      - test-reader:
          name: test-chrome-mangakakalot
          browser: chrome
          reader: mangakakalot
          requires: *chrome_requirements
      - test-reader:
          name: test-chrome-manganato
          browser: chrome
          reader: manganato
          requires: *chrome_requirements
      # - test-reader:
      #     name: test-chrome-isekaiscan
      #     browser: chrome
      #     reader: isekaiscan
      #     requires: *chrome_requirements
